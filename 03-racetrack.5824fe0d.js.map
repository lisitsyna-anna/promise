{"mappings":"YAEA,IAAMA,EAAS,CACb,cACA,UACA,kBACA,aACA,cAGEC,EAAc,EACZC,EAAO,CACXC,SAAUC,SAASC,cAAc,kBACjCC,YAAaF,SAASC,cAAc,cACpCE,cAAeH,SAASC,cAAc,gBACtCG,UAAWJ,SAASC,cAAc,8BA6BpC,SAASI,EAAkBC,GACzBR,EAAKI,YAAYK,YAAcD,C,CAGjC,SAASE,EAAoBF,GAC3BR,EAAKK,cAAcI,YAAcD,C,CAgBnC,SAASG,EAAIC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GACjB,IAQmBC,EAAKC,EARlBC,GAQaF,EARQ,IAQHC,EARS,KAS5BE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAPlDM,YAAW,WACTP,EAAQ,CAAEF,QAAOK,Q,GAChBA,E,IArDPjB,EAAKC,SAASqB,iBAAiB,SAE/B,WACEvB,GAAe,EACf,IAAMwB,EAAWzB,EAAO0B,IAAIb,GAE5BJ,EAAkB,IAClBG,EAAoB,4CAKGe,EAJPF,EAKhBV,QAAQa,KAAKD,GAASE,MAAK,SAAAC,G,IAAGhB,EAAKgB,EAALhB,MAAOK,EAAIW,EAAJX,KACnCV,EAAkB,cAAgDsB,OAAzBjB,EAAM,qBAAqCiB,OAALZ,EAAK,kBAoBxF,SAA4BW,G,IAAEhB,EAAFgB,EAAEhB,MAAOK,EAATW,EAASX,KAAMa,EAAfF,EAAeG,YACnCC,EAAK,WAAkCH,OAAvBC,EAAY,aAA4BD,OAAjBjB,EAAM,aAAgBiB,OAALZ,EAAK,cACnEjB,EAAKM,UAAU2B,mBAAmB,YAAaD,E,CApBtCE,CAAY,CAAEtB,QAAOK,OAAMc,YAAAhC,G,IAItC,SAAoB0B,GAClBZ,QAAQsB,IAAIV,GAASE,MAAK,WACxBjB,EAAoB,wC,IAbtB0B,CAAWb,GAGb,IAAyBE,C","sources":["src/js/03-racetrack.js"],"sourcesContent":["import '../css/common.css';\n\nconst horses = [\n  'Secretariat',\n  'Eclipse',\n  'West Australian',\n  'Flying Fox',\n  'Seabiscuit',\n];\n\nlet raceCounter = 0;\nconst refs = {\n  startBtn: document.querySelector('.js-start-race'),\n  winnerField: document.querySelector('.js-winner'),\n  progressField: document.querySelector('.js-progress'),\n  tableBody: document.querySelector('.js-results-table > tbody'),\n};\n\nrefs.startBtn.addEventListener('click', onStart);\n\nfunction onStart() {\n  raceCounter += 1;\n  const promises = horses.map(run);\n\n  updateWinnerField('');\n  updateProgressField('ü§ñ –ó–∞–µ–∑–¥ –Ω–∞—á–∞–ª—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!');\n  determineWinner(promises);\n  waitForAll(promises);\n}\n\nfunction determineWinner(horsesP) {\n  Promise.race(horsesP).then(({ horse, time }) => {\n    updateWinnerField(`üéâ –ü–æ–±–µ–¥–∏–ª ${horse}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–≤ –∑–∞ ${time}\n    –≤—Ä–µ–º–µ–Ω–∏`);\n    updateResultsTable({ horse, time, raceCounter });\n  });\n}\n\nfunction waitForAll(horsesP) {\n  Promise.all(horsesP).then(() => {\n    updateProgressField('üìù –ó–∞–µ–∑–¥ –æ–∫–æ–Ω—á–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Å—Ç–∞–≤–∫–∏.');\n  });\n}\n\nfunction updateWinnerField(message) {\n  refs.winnerField.textContent = message;\n}\n\nfunction updateProgressField(message) {\n  refs.progressField.textContent = message;\n}\n\nfunction updateResultsTable({ horse, time, raceCounter }) {\n  const tr = `<tr><td>${raceCounter}</td><td>${horse}</td><td>${time}</td></tr>`;\n  refs.tableBody.insertAdjacentHTML('beforeend', tr);\n}\n\n/*\n * Promise.race([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–∏–≤—à–µ–≥–æ—Å—è –ø—Ä–æ–º–∏—Å–∞\n */\n\n/*\n * Promise.all([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–º–∏—Å–æ–≤\n */\n\nfunction run(horse) {\n  return new Promise(resolve => {\n    const time = getRandomTime(2000, 3500);\n\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\nfunction getRandomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"],"names":["$20dc402f54d48953$var$horses","$20dc402f54d48953$var$raceCounter","$20dc402f54d48953$var$refs","startBtn","document","querySelector","winnerField","progressField","tableBody","$20dc402f54d48953$var$updateWinnerField","message","textContent","$20dc402f54d48953$var$updateProgressField","$20dc402f54d48953$var$run","horse","Promise","resolve","min","max","time","Math","floor","random","setTimeout","addEventListener","promises","map","horsesP","race","then","param","concat","raceCounter1","raceCounter","tr","insertAdjacentHTML","$20dc402f54d48953$var$updateResultsTable","all","$20dc402f54d48953$var$waitForAll"],"version":3,"file":"03-racetrack.5824fe0d.js.map"}